{"cells":[{"cell_type":"markdown","source":["# Downloading Dataset from Kaggle"],"metadata":{"id":"pxEwPa7dF7Q3"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"iBwEIyDIv9SX"},"outputs":[],"source":["!pip install -q kaggle"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":90},"executionInfo":{"elapsed":36016,"status":"ok","timestamp":1680287683370,"user":{"displayName":"Jalil","userId":"10356170175071400146"},"user_tz":-120},"id":"BTzZIRpcwNGH","outputId":"a61f41f1-29a2-44e9-d6b8-f5053deeab8f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-0b6e6d8d-ab12-4612-98a3-6bab16d9f52f\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-0b6e6d8d-ab12-4612-98a3-6bab16d9f52f\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving kaggle.json to kaggle.json\n"]},{"output_type":"execute_result","data":{"text/plain":["{'kaggle.json': b'{\"username\":\"jalilbou\",\"key\":\"a7142104a438b233b8801aabae9d6b12\"}'}"]},"metadata":{},"execution_count":2}],"source":["from google.colab import files\n","files.upload()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OqKLgsABwYTE"},"outputs":[],"source":["! mkdir ~/.kaggle"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IHYhX60owh_4"},"outputs":[],"source":["! cp kaggle.json ~/.kaggle"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j99uUBu9woNG"},"outputs":[],"source":["! chmod 600 /root/.kaggle/kaggle.json"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jy5c5SycwwC4"},"outputs":[],"source":["! kaggle datasets list"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":57029,"status":"ok","timestamp":1680287786103,"user":{"displayName":"Jalil","userId":"10356170175071400146"},"user_tz":-120},"id":"NatvOzfRw1Qv","outputId":"c3088b02-ac00-4776-c22f-fd9d32680e02"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading chest-xray-pneumonia.zip to /content\n","100% 2.29G/2.29G [00:58<00:00, 43.8MB/s]\n","100% 2.29G/2.29G [00:58<00:00, 42.4MB/s]\n"]}],"source":["! kaggle datasets download -d paultimothymooney/chest-xray-pneumonia"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QYSbKbrpxAOf"},"outputs":[],"source":["! unzip chest-xray-pneumonia.zip"]},{"cell_type":"markdown","source":["# Splitting the Data"],"metadata":{"id":"6arFTn-GGDeX"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"L42oWlOTxN4S"},"outputs":[],"source":["train = 'chest_xray/train'\n","test = 'chest_xray/test'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Cvq8MQVeySd6"},"outputs":[],"source":["import cv2\n","import os \n","import numpy as np\n","import pickle "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rqj21sbOyA-Q"},"outputs":[],"source":["categories = ['NORMAL', 'PNEUMONIA']\n","\n","def make_data(data_dir, categories):\n","    data = []\n","    for category in categories:\n","        path = os.path.join(data_dir, category)\n","        label = categories.index(category)\n","        for img_name in os.listdir(path):\n","            image_path = os.path.join(path, img_name)\n","            image = cv2.imread(image_path)\n","            try:\n","                image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n","                image = cv2.resize(image, (224,224))\n","                image = np.array(image, dtype=np.float32)\n","                data.append([image, label])\n","            except Exception as e:\n","                pass\n","    print(len(data))\n","    np.random.shuffle(data)\n","    features = []\n","    labels = []\n","    for img, label in data:\n","        features.append(img)\n","        labels.append(label)\n","    features = np.array(features, dtype=np.float32) / 255.0\n","    labels = np.array(labels)\n","    return features, labels\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":77243,"status":"ok","timestamp":1680288732184,"user":{"displayName":"Jalil","userId":"10356170175071400146"},"user_tz":-120},"id":"FbxX18oIyb5n","outputId":"1cb28323-548b-4cc7-b2d6-99df0d0a240c"},"outputs":[{"output_type":"stream","name":"stdout","text":["5216\n","624\n"]}],"source":["X_train, y_train = make_data(train, categories)\n","X_test, y_test = make_data(test, categories)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":39,"status":"ok","timestamp":1680288732185,"user":{"displayName":"Jalil","userId":"10356170175071400146"},"user_tz":-120},"id":"ttyjMI12lJRg","outputId":"f185d65e-bcee-4a36-a7ab-9373d0306ef4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["((5216, 224, 224, 3), (624, 224, 224, 3))"]},"metadata":{},"execution_count":5}],"source":["X_train.shape, X_test.shape "]},{"cell_type":"markdown","source":["# Building the Model"],"metadata":{"id":"J-nAUIEzF3Se"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"_meeFeTfuQCj"},"outputs":[],"source":["import tensorflow as tf\n","import matplotlib.pyplot as plt "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":151735,"status":"ok","timestamp":1680288898193,"user":{"displayName":"Jalil","userId":"10356170175071400146"},"user_tz":-120},"id":"z0z2ZffQHzxe","outputId":"2163705c-61a5-4484-e2b6-31fb0108e5b1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","147/147 [==============================] - 27s 100ms/step - loss: 0.4508 - accuracy: 0.8029 - val_loss: 0.2926 - val_accuracy: 0.9119\n","Epoch 2/10\n","147/147 [==============================] - 13s 90ms/step - loss: 0.2287 - accuracy: 0.9137 - val_loss: 0.3208 - val_accuracy: 0.9253\n","Epoch 3/10\n","147/147 [==============================] - 13s 88ms/step - loss: 0.1882 - accuracy: 0.9259 - val_loss: 0.2946 - val_accuracy: 0.9119\n","Epoch 4/10\n","147/147 [==============================] - 13s 89ms/step - loss: 0.1560 - accuracy: 0.9423 - val_loss: 0.2129 - val_accuracy: 0.9195\n","Epoch 5/10\n","147/147 [==============================] - 13s 87ms/step - loss: 0.1441 - accuracy: 0.9461 - val_loss: 0.1806 - val_accuracy: 0.9598\n","Epoch 6/10\n","147/147 [==============================] - 13s 90ms/step - loss: 0.1284 - accuracy: 0.9540 - val_loss: 0.2564 - val_accuracy: 0.9387\n","Epoch 7/10\n","147/147 [==============================] - 13s 88ms/step - loss: 0.1252 - accuracy: 0.9550 - val_loss: 0.2075 - val_accuracy: 0.9195\n","Epoch 8/10\n","147/147 [==============================] - 13s 89ms/step - loss: 0.1178 - accuracy: 0.9580 - val_loss: 0.1707 - val_accuracy: 0.9617\n","Epoch 9/10\n","147/147 [==============================] - 13s 87ms/step - loss: 0.1010 - accuracy: 0.9636 - val_loss: 0.1512 - val_accuracy: 0.9674\n","Epoch 10/10\n","147/147 [==============================] - 13s 87ms/step - loss: 0.0940 - accuracy: 0.9663 - val_loss: 0.1084 - val_accuracy: 0.9770\n"]}],"source":["# 1. build the model\n","\n","model = tf.keras.Sequential([\n","    tf.keras.layers.Input([224,224,3]),\n","\n","    tf.keras.layers.Conv2D(filters=32, kernel_size=(3,3), strides=1, activation='relu'),\n","    tf.keras.layers.MaxPool2D(pool_size=2, strides=2),\n","    tf.keras.layers.Dropout(0.5),\n","\n","    tf.keras.layers.Conv2D(filters=64, kernel_size=(3,3), strides=1, activation='relu'),\n","    tf.keras.layers.MaxPool2D(pool_size=2, strides=2),\n","    tf.keras.layers.Dropout(0.5),\n","\n","    tf.keras.layers.Conv2D(filters=128, kernel_size=(3,3), strides=1,activation='relu'),\n","    tf.keras.layers.MaxPool2D(pool_size=2, strides=2),\n","    tf.keras.layers.Dropout(0.5),\n","\n","    tf.keras.layers.Conv2D(filters=16, kernel_size=(5,5), strides=1,activation='relu'),\n","    tf.keras.layers.MaxPool2D(pool_size=2, strides=2),\n","\n","    tf.keras.layers.Flatten(),\n","    tf.keras.layers.Dense(224, activation='relu'),\n","    tf.keras.layers.Dense(1, activation='sigmoid')\n","])\n","\n","# 2. compile the mode\n","\n","model.compile(loss='binary_crossentropy',\n","              optimizer='Adam',\n","              metrics=['accuracy'])\n","\n","# 3. fit the model\n","\n","hist = model.fit(X_train, y_train, validation_split=0.1, epochs=10)"]},{"cell_type":"markdown","source":["# Model Evaluation"],"metadata":{"id":"Mw63-KOeFqEh"}},{"cell_type":"code","source":["model.evaluate(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-a9VwcSBct_Y","executionInfo":{"status":"ok","timestamp":1680288914092,"user_tz":-120,"elapsed":2732,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"30f6d6d7-7056-447c-b15f-f3b4ea15243a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["20/20 [==============================] - 1s 40ms/step - loss: 0.5130 - accuracy: 0.7981\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.5129613876342773, 0.7980769276618958]"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["> The model's accuracy on data that never seen before is about 80% "],"metadata":{"id":"L7sY4TO2Bpgj"}},{"cell_type":"code","source":["y_pred = model.predict(X_test)"],"metadata":{"id":"415KSy3EDKTg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["precision = tf.keras.metrics.Precision()\n","recall = tf.keras.metrics.Recall()\n","\n","precision.update_state(y_pred, y_test)\n","recall.update_state(y_pred, y_test)\n","\n","precision = precision.result().numpy()\n","recall = recall.result().numpy()\n","\n","precision, recall"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"20NEX5otERqj","executionInfo":{"status":"ok","timestamp":1680289787204,"user_tz":-120,"elapsed":409,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"17bcbb21-3222-4406-8f1b-d44266f4cdd3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1.0, 0.625)"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["> A precision equals to 100% means that the model got no false positives (in other words didn't predict that a normal person got the pneumonia), however a recall of 62.5% means that the model got a false negative (patient with pneumonia but did't detect it) almost 37% of the time."],"metadata":{"id":"fNyKwNT3E9PK"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"tkjfzHJDNBH9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1680288936240,"user_tz":-120,"elapsed":447,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"a6468f7d-6d2b-4238-e473-e348658fb342"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 222, 222, 32)      896       \n","                                                                 \n"," max_pooling2d (MaxPooling2D  (None, 111, 111, 32)     0         \n"," )                                                               \n","                                                                 \n"," dropout (Dropout)           (None, 111, 111, 32)      0         \n","                                                                 \n"," conv2d_1 (Conv2D)           (None, 109, 109, 64)      18496     \n","                                                                 \n"," max_pooling2d_1 (MaxPooling  (None, 54, 54, 64)       0         \n"," 2D)                                                             \n","                                                                 \n"," dropout_1 (Dropout)         (None, 54, 54, 64)        0         \n","                                                                 \n"," conv2d_2 (Conv2D)           (None, 52, 52, 128)       73856     \n","                                                                 \n"," max_pooling2d_2 (MaxPooling  (None, 26, 26, 128)      0         \n"," 2D)                                                             \n","                                                                 \n"," dropout_2 (Dropout)         (None, 26, 26, 128)       0         \n","                                                                 \n"," conv2d_3 (Conv2D)           (None, 22, 22, 16)        51216     \n","                                                                 \n"," max_pooling2d_3 (MaxPooling  (None, 11, 11, 16)       0         \n"," 2D)                                                             \n","                                                                 \n"," flatten (Flatten)           (None, 1936)              0         \n","                                                                 \n"," dense (Dense)               (None, 224)               433888    \n","                                                                 \n"," dense_1 (Dense)             (None, 1)                 225       \n","                                                                 \n","=================================================================\n","Total params: 578,577\n","Trainable params: 578,577\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}],"source":["model.summary()"]},{"cell_type":"markdown","source":["# Plotting the Performance"],"metadata":{"id":"rSdlbclIFy8o"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"6JKTTUg5Q-cX","colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"status":"ok","timestamp":1680289273597,"user_tz":-120,"elapsed":509,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"f8ffb355-d474-4e1e-917d-1639c01dc14c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure()\n","plt.plot(hist.history['loss'], color= 'y', label='loss')\n","plt.plot(hist.history['val_loss'], color='k', label='validation loss')\n","plt.legend(loc='upper right')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WnFIW_oRSZKP","colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"status":"ok","timestamp":1680289280588,"user_tz":-120,"elapsed":651,"user":{"displayName":"Jalil","userId":"10356170175071400146"}},"outputId":"447cf94a-4682-42ef-98bb-6770fa7c0103"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure()\n","plt.plot(hist.history['accuracy'], color= 'y', label='accuracy')\n","plt.plot(hist.history['val_accuracy'], color='k', label='validation accuracy')\n","plt.legend(loc='upper right')\n","plt.show()"]},{"cell_type":"code","source":["image = cv2.imread('BacterialPneumonia.jpeg')\n","image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n","image = cv2.resize(image, (224,224))\n","image = np.array(image, dtype=np.float32)\n","image = np.expand_dims(image, axis=-1)\n","image = np.expand_dims(image, axis=0)\n","image /= 255\n","yhat = model.predict(image)\n","yhat"],"metadata":{"id":"hGOX-LgPahCW"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GNrtYwwyKoPA"},"outputs":[],"source":["model.save('chest_xray_model.h5')"]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[],"authorship_tag":"ABX9TyO71812uwRvo23jyV/RngRU"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}